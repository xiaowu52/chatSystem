<Application x:Class="Desktop.Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Desktop.Client"
             StartupUri="Views/Login.xaml">
    <Application.Resources>
        <!--主题颜色-->
        <SolidColorBrush x:Key="MainColor" Color="CadetBlue" />
        <SolidColorBrush x:Key="BackgroundColor" Color="#FFFAF0" />

        <!--按钮颜色-->
        <!--鼠标经过-->
        <SolidColorBrush x:Key="ButtonMouseOver1" Color="#FFF0F5" />
        <SolidColorBrush x:Key="ButtonMouseOver2" Color="Blue" />
        <!--按下-->
        <SolidColorBrush x:Key="ButtonPressed1" Color="#FFE4E1" />
        <SolidColorBrush x:Key="ButtonPressed2" Color="BlueViolet" />
        <!--禁用-->
        <SolidColorBrush x:Key="ButtonIsEnabled" Color="#D3D3D3" />

        <!--窗口样式-->
        <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border CornerRadius="10" BorderThickness="1" Background="{DynamicResource BackgroundColor}" BorderBrush="{DynamicResource MainColor}">
                            <ContentControl Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--标题按钮样式-->
        <Style x:Key="TitleButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="100" Background="{TemplateBinding Background}">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{DynamicResource MainColor}" FontSize="20"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonMouseOver1}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonPressed1}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--普通按钮样式-->
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MainColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="8" Background="{TemplateBinding Background}">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="#ffffff" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonMouseOver2}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonPressed2}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource ButtonIsEnabled}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--透明按钮样式-->
        <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource MainColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent" BorderBrush="Transparent">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource ButtonMouseOver2}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource ButtonPressed2}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--边框按钮样式-->
        <Style x:Key="BorderButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent">
                            <ContentControl Content="{TemplateBinding Content}" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MainColor}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" Value="{DynamicResource ButtonIsEnabled}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--输入框、密码框样式-->
        <Style x:Key="InputBoxStyle">
            <Setter Property="TextBox.BorderBrush" Value="{DynamicResource MainColor}" />
            <Setter Property="TextBox.BorderThickness" Value="1.5" />
            <Setter Property="TextBox.Foreground" Value="{DynamicResource MainColor}" />
            <Setter Property="TextBox.Padding" Value="3" />
            <Setter Property="TextBox.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="Center">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--文字块样式-->
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource MainColor}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <!-- TabItem样式 -->
        <Style x:Key="ChatTabItemStyle" TargetType="TabItem">
            <Setter Property="Foreground" Value="{DynamicResource MainColor}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MainColor}"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="0,0,2,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Transparent" 
                        CornerRadius="4,4,0,0" Margin="0,0,4,0">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" ContentSource="Header"
                                    Margin="10,5"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FFFFFF"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MainColor}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#F0F0F0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 聊天气泡样式 - 修改后 -->
        <Style x:Key="SentMessageStyle" TargetType="Border">
            <Setter Property="Background" Value="#DCF8C6"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="350,8,5,8"/>
            <!-- 增加左边距，上下边距也略微增加 -->
        </Style>

        <Style x:Key="ReceivedMessageStyle" TargetType="Border">
            <Setter Property="Background" Value="#E8F4F5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="5,8,100,8"/>
            <!-- 增加右边距，上下边距也略微增加 -->
        </Style>


    </Application.Resources>
</Application>
